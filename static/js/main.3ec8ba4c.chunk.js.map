{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Section/Section.jsx","App.jsx","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistics","item","FeedbackOptions","options","onLeaveFeedback","button","map","btns","type","value","onClick","Notification","message","Section","title","children","section","App","state","explainBtn","onClickBtn","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,gC,uCCA5BD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,+ICgCtDC,MA9Bf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qBAAIC,UAAWC,IAAOC,WAAtB,UACE,oBAAIF,UAAWC,IAAOE,KAAtB,SACE,uCAAUR,OAEZ,oBAAIK,UAAWC,IAAOE,KAAtB,SACE,0CAAaP,OAEf,oBAAII,UAAWC,IAAOE,KAAtB,SACE,sCAASN,OAEX,oBAAIG,UAAWC,IAAOE,KAAtB,SACE,wCAAWL,OAEb,oBAAIE,UAAWC,IAAOE,KAAtB,SACE,oDAAuBJ,EAAvB,c,gBCKOK,MArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAASF,EAAQG,KAAI,SAACD,GAAD,OACzB,6BACE,wBACEP,UAAWC,IAAOQ,KAClBC,KAAK,SACLC,MAAOJ,EACPK,QAAS,kBAAMN,EAAgBC,IAJjC,SAMGA,KAPIA,MAWX,OAAO,oBAAIP,UAAWC,IAAOQ,KAAtB,SAA6BF,K,iBCFvBM,MAXf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,mBAAGd,UAAWC,IAAOa,QAArB,SAA+BA,O,gBCUtBC,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,sBAAKjB,UAAWC,IAAOiB,QAAvB,UACE,oBAAIlB,UAAWC,IAAOe,MAAtB,SAA8BA,IAC7BC,MCqDQE,G,kNAnDbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPwB,WAAa,CAAC,OAAQ,UAAW,O,EAEjCC,WAAa,SAACf,GACZ,EAAKgB,UAAS,SAACH,GAAD,mBAAC,eACVA,GADS,kBAEXb,EAAUa,EAAMb,IAAW,Q,EAIhCiB,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBzB,KADiB,EACXC,QADW,EACFC,K,EAIzB4B,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKP,MAAMzB,KAAO,EAAK6B,qBAAwB,M,4CAEpE,WAAU,IAAD,EACwBI,KAAKR,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASmB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASuB,KAAKP,WACdf,gBAAiBsB,KAAKN,eAG1B,cAAC,EAAD,CAASN,MAAM,YAAf,SACGY,KAAKJ,qBACJ,cAAC,EAAD,CACE7B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO8B,KAAKJ,qBACZzB,mBAAoB6B,KAAKH,oCAG3B,cAAC,EAAD,CAAcX,QAAQ,kC,GA5ChBe,cCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B1C,EAAOC,QAAU,CAAC,KAAO,gC,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,0B","file":"static/js/main.3ec8ba4c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__SUUi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1YgN_\",\"item\":\"Statistics_item__1HK-Q\"};","import styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <ul className={styles.statistics}>\r\n      <li className={styles.item}>\r\n        <p>Good: {good}</p>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <p>Neutral: {neutral}</p>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <p>Bad: {bad}</p>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <p>Total: {total}</p>\r\n      </li>\r\n      <li className={styles.item}>\r\n        <p>Positive feedback: {positivePercentage} %</p>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n\r\n// import PropTypes from 'prop-types';\r\n// import Notification from '../Notification';\r\n\r\n// import styles from './Statistics.module.scss';\r\n\r\n// const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n//   const totalFeedback = total();\r\n//   const positiveValue = positivePercentage();\r\n\r\n//   return (\r\n//     <div>\r\n//       {!!totalFeedback ? (\r\n//         <ul>\r\n//           <li className={styles.item}>\r\n//             <p>\r\n//               Good: <span className={styles.value}>{good}</span>\r\n//             </p>\r\n//           </li>\r\n//           <li className={styles.item}>\r\n//             <p>\r\n//               Neutral: <span className={styles.value}>{neutral}</span>\r\n//             </p>\r\n//           </li>\r\n//           <li className={styles.item}>\r\n//             <p>\r\n//               Bad: <span className={styles.value}>{bad}</span>\r\n//             </p>\r\n//           </li>\r\n//           <li className={styles.item}>\r\n//             <p>\r\n//               Total: <span className={styles.value}>{totalFeedback}</span>\r\n//             </p>\r\n//           </li>\r\n//           <li className={styles.item}>\r\n//             <p>\r\n//               Positive feedback:{' '}\r\n//               <span className={styles.value}>{positiveValue}%</span>\r\n//             </p>\r\n//           </li>\r\n//         </ul>\r\n//       ) : (\r\n//         <Notification message={'No feedback given'} />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// Statistics.propTypes = {\r\n//   good: PropTypes.number.isRequired,\r\n//   neutral: PropTypes.number.isRequired,\r\n//   bad: PropTypes.number.isRequired,\r\n//   total: PropTypes.func.isRequired,\r\n//   positivePercentage: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const button = options.map((button) => (\r\n    <li key={button}>\r\n      <button\r\n        className={styles.btns}\r\n        type=\"button\"\r\n        value={button}\r\n        onClick={() => onLeaveFeedback(button)}\r\n      >\r\n        {button}\r\n      </button>\r\n    </li>\r\n  ));\r\n  return <ul className={styles.btns}>{button}</ul>;\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styles from \"./Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p className={styles.message}>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={styles.section}>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from \"react\";\nimport { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\nimport Section from \"./components/Section/Section\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  explainBtn = [\"good\", \"neutral\", \"bad\"];\n\n  onClickBtn = (button) => {\n    this.setState((state) => ({\n      ...state,\n      [button]: (state[button] += 1),\n    }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.explainBtn}\n            onLeaveFeedback={this.onClickBtn}\n          ></FeedbackOptions>\n        </Section>\n        <Section title=\"Statistic\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"There is no feedback\"></Notification>\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btns\":\"FeedbackOptions_btns__14v-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1DrGf\",\"title\":\"Section_title__2grGI\"};"],"sourceRoot":""}